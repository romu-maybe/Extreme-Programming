{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport request from \"@/utils/request\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const name = ref(''); // 搜索字段\n    const currentPage = ref(1); // 当前页码\n    const pageSize = ref(10); // 每页显示条数\n    const total = ref(0); // 总条数\n    const data = ref({\n      arr: []\n    });\n    const visible = ref(false);\n    const load = async (pageNum = currentPage.value) => {\n      try {\n        const response = await request.get('/user/selectByPage', {\n          params: {\n            pageNum,\n            pageSize: pageSize.value,\n            username: '',\n            // 可调整其他搜索字段\n            name: name.value\n          }\n        });\n        data.value.arr = response.data.records; // 假设数据在 res.data.records\n        total.value = response.data.total; // 假设总条数在 res.data.total\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // 初始化加载数据\n    onMounted(() => {\n      load();\n    });\n\n    // 处理分页大小变化\n    const handleSizeChange = newSize => {\n      pageSize.value = newSize;\n      load(1); // 改变分页大小时从第一页加载数据\n    };\n\n    // 处理页码变化\n    const handleCurrentChange = newPage => {\n      currentPage.value = newPage;\n      load(newPage); // 加载新页码的数据\n    };\n\n    // 编辑操作\n    const handleEdit = row => {\n      console.log('Editing row:', row);\n    };\n\n    // 删除操作\n    const handleDelete = row => {\n      console.log('Deleting row:', row);\n      visible.value = true;\n    };\n\n    // 确认删除\n    const confirmDelete = row => {\n      visible.value = false;\n      // 执行删除逻辑，例如调用 API\n    };\n    const __returned__ = {\n      name,\n      currentPage,\n      pageSize,\n      total,\n      data,\n      visible,\n      load,\n      handleSizeChange,\n      handleCurrentChange,\n      handleEdit,\n      handleDelete,\n      confirmDelete,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get request() {\n        return request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","request","name","currentPage","pageSize","total","data","arr","visible","load","pageNum","value","response","get","params","username","records","error","console","handleSizeChange","newSize","handleCurrentChange","newPage","handleEdit","row","log","handleDelete","confirmDelete"],"sources":["D:/大学资料/软件工程/项目/test/demo/vue/src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <!--搜索区域-->\r\n  <div style=\"margin: 10px 10px\">\r\n    <el-input v-model=\"name\" style=\"width: 20%\" placeholder=\"输入姓名\"></el-input>\r\n    <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"load\">搜索</el-button>\r\n  </div>\r\n  <!--主体区域-->\r\n  <div style=\"padding: 10px;\">\r\n    <el-table :data=\"data.arr\" border stripe>\r\n      <el-table-column type=\"selection\" />\r\n      <el-table-column prop=\"id\" label=\"编号\" width=\"55\" />\r\n      <el-table-column prop=\"name\" label=\"姓名\" />\r\n      <el-table-column prop=\"phone\" label=\"手机号码\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column label=\"\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-button @click=\"handleEdit(scope.row)\" size=\"small\" type=\"primary\">编辑</el-button>\r\n          <el-popover :visible=\"visible\" placement=\"top\" :width=\"160\">\r\n            <p>Are you sure to delete this?</p>\r\n            <div style=\"text-align: right; margin: 0\">\r\n              <el-button size=\"small\" text @click=\"visible = false\">cancel</el-button>\r\n              <el-button size=\"small\" type=\"primary\" @click=\"confirmDelete(scope.row)\">confirm</el-button>\r\n            </div>\r\n            <template #reference>\r\n              <el-button @click=\"handleDelete(scope.row)\" size=\"small\" type=\"danger\">删除</el-button>\r\n            </template>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n  <div class=\"example-pagination-block\">\r\n    <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"total\"\r\n        layout=\"prev, pager, next, sizes\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport request from \"@/utils/request\";\r\n\r\nconst name = ref(''); // 搜索字段\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(10); // 每页显示条数\r\nconst total = ref(0); // 总条数\r\nconst data = ref({ arr: [] });\r\nconst visible = ref(false);\r\n\r\nconst load = async (pageNum = currentPage.value) => {\r\n  try {\r\n    const response = await request.get('/user/selectByPage', {\r\n      params: {\r\n        pageNum,\r\n        pageSize: pageSize.value,\r\n        username: '',  // 可调整其他搜索字段\r\n        name: name.value\r\n      }\r\n    });\r\n    data.value.arr = response.data.records; // 假设数据在 res.data.records\r\n    total.value = response.data.total;      // 假设总条数在 res.data.total\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n};\r\n\r\n// 初始化加载数据\r\nonMounted(() => {\r\n  load();\r\n});\r\n\r\n// 处理分页大小变化\r\nconst handleSizeChange = (newSize) => {\r\n  pageSize.value = newSize;\r\n  load(1); // 改变分页大小时从第一页加载数据\r\n};\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (newPage) => {\r\n  currentPage.value = newPage;\r\n  load(newPage); // 加载新页码的数据\r\n};\r\n\r\n// 编辑操作\r\nconst handleEdit = (row) => {\r\n  console.log('Editing row:', row);\r\n};\r\n\r\n// 删除操作\r\nconst handleDelete = (row) => {\r\n  console.log('Deleting row:', row);\r\n  visible.value = true;\r\n};\r\n\r\n// 确认删除\r\nconst confirmDelete = (row) => {\r\n  visible.value = false;\r\n  // 执行删除逻辑，例如调用 API\r\n};\r\n</script>\r\n"],"mappings":"AA6CA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iBAAiB;;;;;;;IAErC,MAAMC,IAAI,GAAGJ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB,MAAMK,WAAW,GAAGL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMM,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,MAAMO,KAAK,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,MAAMQ,IAAI,GAAGR,GAAG,CAAC;MAAES,GAAG,EAAE;IAAG,CAAC,CAAC;IAC7B,MAAMC,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMW,IAAI,GAAG,MAAAA,CAAOC,OAAO,GAAGP,WAAW,CAACQ,KAAK,KAAK;MAClD,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,GAAG,CAAC,oBAAoB,EAAE;UACvDC,MAAM,EAAE;YACNJ,OAAO;YACPN,QAAQ,EAAEA,QAAQ,CAACO,KAAK;YACxBI,QAAQ,EAAE,EAAE;YAAG;YACfb,IAAI,EAAEA,IAAI,CAACS;UACb;QACF,CAAC,CAAC;QACFL,IAAI,CAACK,KAAK,CAACJ,GAAG,GAAGK,QAAQ,CAACN,IAAI,CAACU,OAAO,CAAC,CAAC;QACxCX,KAAK,CAACM,KAAK,GAAGC,QAAQ,CAACN,IAAI,CAACD,KAAK,CAAC,CAAM;MAC1C,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;;IAED;IACAlB,SAAS,CAAC,MAAM;MACdU,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;;IAEF;IACA,MAAMU,gBAAgB,GAAIC,OAAO,IAAK;MACpChB,QAAQ,CAACO,KAAK,GAAGS,OAAO;MACxBX,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC;;IAED;IACA,MAAMY,mBAAmB,GAAIC,OAAO,IAAK;MACvCnB,WAAW,CAACQ,KAAK,GAAGW,OAAO;MAC3Bb,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;IACjB,CAAC;;IAED;IACA,MAAMC,UAAU,GAAIC,GAAG,IAAK;MAC1BN,OAAO,CAACO,GAAG,CAAC,cAAc,EAAED,GAAG,CAAC;IAClC,CAAC;;IAED;IACA,MAAME,YAAY,GAAIF,GAAG,IAAK;MAC5BN,OAAO,CAACO,GAAG,CAAC,eAAe,EAAED,GAAG,CAAC;MACjChB,OAAO,CAACG,KAAK,GAAG,IAAI;IACtB,CAAC;;IAED;IACA,MAAMgB,aAAa,GAAIH,GAAG,IAAK;MAC7BhB,OAAO,CAACG,KAAK,GAAG,KAAK;MACrB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}