{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport request from \"@/utils/request\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const name = ref('');\n    const currentPage = ref(1); // 当前页码\n    const pageSize = ref(10); // 每页显示的条数\n    const total = ref(50); // 总条数\n\n    const handleSizeChange = newSize => {\n      pageSize.value = newSize;\n    };\n    const handleCurrentChange = newPage => {\n      currentPage.value = newPage; // 更新当前页码\n    };\n    const search = ref('');\n    const data = ref({\n      arr: []\n    });\n    const visible = ref(false);\n    onMounted(() => {\n      fetchData();\n    });\n\n    // 修改 fetchData 函数以实现分页查询\n    const fetchData = async () => {\n      try {\n        const response = await request.get('/user/selectAll', {\n          params: {\n            page: currentPage.value,\n            // 当前页码\n            limit: pageSize.value,\n            // 每页条数\n            search: search.value // 搜索关键字，如果后端支持的话\n          }\n        });\n        data.value.arr = response.data.rows; // 假设后端返回的数据结构包含 rows 字段\n        total.value = response.data.total; // 假设后端返回的数据结构包含 total 字段\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const handleEdit = row => {\n      console.log('Editing row:', row);\n    };\n    const handleDelete = row => {\n      console.log('Deleting row:', row);\n      visible.value = true;\n    };\n    onMounted(fetchData);\n    const __returned__ = {\n      name,\n      currentPage,\n      pageSize,\n      total,\n      handleSizeChange,\n      handleCurrentChange,\n      search,\n      data,\n      visible,\n      fetchData,\n      handleEdit,\n      handleDelete,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get request() {\n        return request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","request","name","currentPage","pageSize","total","handleSizeChange","newSize","value","handleCurrentChange","newPage","search","data","arr","visible","fetchData","response","get","params","page","limit","rows","error","console","handleEdit","row","log","handleDelete"],"sources":["D:/大学资料/软件工程/项目/test/demo/vue/src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <!--搜索区域-->\r\n  <div style=\"margin: 10px 10px\">\r\n    <el-input v-model=\"name\" style=\"width: 20%\" placeholder=\"输入姓名\"></el-input>\r\n    <el-button type=\"primary\" style=\"margin-left: 5px\">搜索</el-button>\r\n  </div>\r\n  <!--主体区域-->\r\n  <div style=\"padding: 10px;\">\r\n    <el-table :data=\"data.arr\" border stripe>\r\n      <el-table-column type=\"selection\" />\r\n      <el-table-column prop=\"id\" label=\"编号\" width=\"55\" />\r\n      <el-table-column prop=\"name\" label=\"姓名\" />\r\n      <el-table-column prop=\"phone\" label=\"手机号码\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column label=\"\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-button @click= \"handleEdit(scope.row)\" size=\"small\" type=\"primary\">编辑</el-button>\r\n\r\n           <el-popover :visible=\"visible\" placement=\"top\" :width=\"160\">\r\n              <p>Are you sure to delete this?</p>\r\n              <div style=\"text-align: right; margin: 0\">\r\n                <el-button size=\"small\" text @click=\"visible = false\">cancel</el-button>\r\n                <el-button size=\"small\" type=\"primary\" @click=\"visible = false\">\r\n                  confirm\r\n                </el-button>\r\n              </div>\r\n              <template #reference>\r\n                <el-button @click=\"handleDelete(scope.row)\" size=\"small\" type=\"danger\">删除</el-button>\r\n              </template>\r\n            </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n  <div class=\"example-pagination-block\">\r\n    <div class=\"example-demonstration\"></div>\r\n    <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"total\"\r\n        layout=\"prev, pager, next, sizes\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport request from \"@/utils/request\";\r\n\r\nconst name = ref('');\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(10); // 每页显示的条数\r\nconst total = ref(50); // 总条数\r\n\r\nconst handleSizeChange = (newSize) => {\r\n  pageSize.value = newSize;\r\n};\r\nconst handleCurrentChange = (newPage) => {\r\n  currentPage.value = newPage; // 更新当前页码\r\n};\r\n\r\n\r\nconst search = ref('');\r\nconst data = ref({ arr: [] });\r\nconst visible = ref(false);\r\n\r\nonMounted(() => {\r\n  fetchData();\r\n});\r\n\r\n// 修改 fetchData 函数以实现分页查询\r\nconst fetchData = async () => {\r\n  try {\r\n    const response = await request.get('/user/selectAll', {\r\n      params: {\r\n        page: currentPage.value, // 当前页码\r\n        limit: pageSize.value, // 每页条数\r\n        search: search.value // 搜索关键字，如果后端支持的话\r\n      }\r\n    });\r\n    data.value.arr = response.data.rows; // 假设后端返回的数据结构包含 rows 字段\r\n    total.value = response.data.total; // 假设后端返回的数据结构包含 total 字段\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n};\r\n\r\n\r\nconst handleEdit = (row) => {\r\n  console.log('Editing row:', row);\r\n};\r\n\r\nconst handleDelete = (row) => {\r\n  console.log('Deleting row:', row);\r\n  visible.value = true;\r\n};\r\n\r\nonMounted(fetchData);\r\n\r\n</script>\r\n"],"mappings":"AAiDA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iBAAiB;;;;;;;IAErC,MAAMC,IAAI,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMK,WAAW,GAAGL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMM,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,MAAMO,KAAK,GAAGP,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEvB,MAAMQ,gBAAgB,GAAIC,OAAO,IAAK;MACpCH,QAAQ,CAACI,KAAK,GAAGD,OAAO;IAC1B,CAAC;IACD,MAAME,mBAAmB,GAAIC,OAAO,IAAK;MACvCP,WAAW,CAACK,KAAK,GAAGE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAGD,MAAMC,MAAM,GAAGb,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMc,IAAI,GAAGd,GAAG,CAAC;MAAEe,GAAG,EAAE;IAAG,CAAC,CAAC;IAC7B,MAAMC,OAAO,GAAGhB,GAAG,CAAC,KAAK,CAAC;IAE1BC,SAAS,CAAC,MAAM;MACdgB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;;IAEF;IACA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,GAAG,CAAC,iBAAiB,EAAE;UACpDC,MAAM,EAAE;YACNC,IAAI,EAAEhB,WAAW,CAACK,KAAK;YAAE;YACzBY,KAAK,EAAEhB,QAAQ,CAACI,KAAK;YAAE;YACvBG,MAAM,EAAEA,MAAM,CAACH,KAAK,CAAC;UACvB;QACF,CAAC,CAAC;QACFI,IAAI,CAACJ,KAAK,CAACK,GAAG,GAAGG,QAAQ,CAACJ,IAAI,CAACS,IAAI,CAAC,CAAC;QACrChB,KAAK,CAACG,KAAK,GAAGQ,QAAQ,CAACJ,IAAI,CAACP,KAAK,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAGD,MAAME,UAAU,GAAIC,GAAG,IAAK;MAC1BF,OAAO,CAACG,GAAG,CAAC,cAAc,EAAED,GAAG,CAAC;IAClC,CAAC;IAED,MAAME,YAAY,GAAIF,GAAG,IAAK;MAC5BF,OAAO,CAACG,GAAG,CAAC,eAAe,EAAED,GAAG,CAAC;MACjCX,OAAO,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC;IAEDT,SAAS,CAACgB,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}