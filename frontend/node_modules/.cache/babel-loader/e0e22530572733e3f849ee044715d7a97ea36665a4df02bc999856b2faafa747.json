{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const store = useStore();\n    const user = ref({\n      username: '',\n      password: ''\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入账号',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const loginFormRef = ref(null);\n    const login = () => {\n      loginFormRef.value.validate(valid => {\n        if (valid) {\n          // 验证通过\n          store.dispatch('login', user.value).then(res => {\n            if (res.code === '200') {\n              router.push('/');\n              ElMessage.success('登录成功');\n              localStorage.setItem(\"honey-user\", JSON.stringify(res.data)); // 存储用户数据\n            } else {\n              ElMessage.error(res.msg);\n            }\n          });\n        }\n      });\n    };\n    const navigateToRegister = () => {\n      router.push('/register');\n    };\n    const __returned__ = {\n      router,\n      store,\n      user,\n      rules,\n      loginFormRef,\n      login,\n      navigateToRegister,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElMessage","useStore","router","store","user","username","password","rules","required","message","trigger","loginFormRef","login","value","validate","valid","dispatch","then","res","code","push","success","localStorage","setItem","JSON","stringify","data","error","msg","navigateToRegister"],"sources":["D:/大学资料/软件工程/项目/test/demo/vue/src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100vh; display: flex; align-items: center; justify-content: center; background-color: #0f9876\">\r\n    <div style=\"display: flex; background-color: white; width: 50%; border-radius: 5px; overflow: hidden\">\r\n      <div style=\"flex: 1\">\r\n        <img src=\"@/assets/login.png\" alt=\"\" style=\"width: 100%\">\r\n      </div>\r\n      <div style=\"flex: 1; display: flex; align-items: center; justify-content: center\">\r\n        <el-form :model=\"user\" style=\"width: 80%\" :rules=\"rules\" ref=\"loginFormRef\">\r\n          <div style=\"font-size: 20px; font-weight: bold; text-align: center; margin-bottom: 20px\">通讯录</div>\r\n          <el-form-item prop=\"username\">\r\n            <el-input prefix-icon=\"User\" size=\"medium\" placeholder=\"请输入账号\" v-model=\"user.username\" />\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\">\r\n            <el-input prefix-icon=\"Lock\" size=\"medium\" show-password placeholder=\"请输入密码\" v-model=\"user.password\" />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" style=\"width: 100%\" @click=\"login\">登 录</el-button>\r\n          </el-form-item>\r\n          <div style=\"display: flex\">\r\n            <div style=\"flex: 1\">没有账号？请 <span style=\"color: #0f9876; cursor: pointer\" @click=\"navigateToRegister\">注册</span></div>\r\n            <div style=\"flex: 1; text-align: right\"><span style=\"color: #0f9876; cursor: pointer\">忘记密码</span></div>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport { useStore } from 'vuex';\r\n\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\nconst user = ref({\r\n  username: '',\r\n  password: ''\r\n});\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入账号', trigger: 'blur' },\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n  ],\r\n};\r\n\r\nconst loginFormRef = ref(null);\r\n\r\nconst login = () => {\r\n  loginFormRef.value.validate((valid) => {\r\n    if (valid) {\r\n      // 验证通过\r\n      store.dispatch('login', user.value).then(res => {\r\n        if (res.code === '200') {\r\n          router.push('/');\r\n          ElMessage.success('登录成功');\r\n          localStorage.setItem(\"honey-user\", JSON.stringify(res.data));  // 存储用户数据\r\n        } else {\r\n          ElMessage.error(res.msg);\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nconst navigateToRegister = () => {\r\n  router.push('/register');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AA6BA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,KAAK,GAAGF,QAAQ,CAAC,CAAC;IAExB,MAAMG,IAAI,GAAGN,GAAG,CAAC;MACfO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG;MACZF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CACtD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAEzD,CAAC;IAED,MAAMC,YAAY,GAAGb,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMc,KAAK,GAAGA,CAAA,KAAM;MAClBD,YAAY,CAACE,KAAK,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACrC,IAAIA,KAAK,EAAE;UACT;UACAZ,KAAK,CAACa,QAAQ,CAAC,OAAO,EAAEZ,IAAI,CAACS,KAAK,CAAC,CAACI,IAAI,CAACC,GAAG,IAAI;YAC9C,IAAIA,GAAG,CAACC,IAAI,KAAK,KAAK,EAAE;cACtBjB,MAAM,CAACkB,IAAI,CAAC,GAAG,CAAC;cAChBpB,SAAS,CAACqB,OAAO,CAAC,MAAM,CAAC;cACzBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAE;YACjE,CAAC,MAAM;cACL1B,SAAS,CAAC2B,KAAK,CAACT,GAAG,CAACU,GAAG,CAAC;YAC1B;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC/B3B,MAAM,CAACkB,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}