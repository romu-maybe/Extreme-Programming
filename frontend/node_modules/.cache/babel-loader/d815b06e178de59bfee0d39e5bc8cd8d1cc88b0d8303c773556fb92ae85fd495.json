{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const name = ref('');\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(50);\n    const data = ref({\n      arr: []\n    });\n    const visible = ref(false);\n    const addDialogVisible = ref(false);\n    const form = ref({\n      username: '',\n      password: '',\n      name: '',\n      phone: '',\n      email: '',\n      address: '',\n      avatar: ''\n    });\n    const userToken = ref(JSON.parse(localStorage.getItem('user-token')) || '');\n    const openAddDialog = () => {\n      form.value = {}; // Reset form\n      addDialogVisible.value = true;\n    };\n    const handleAvatarSuccess = response => {\n      form.value.avatar = response.data;\n    };\n    const saveUser = async () => {\n      const formRef = ref();\n      formRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            const response = await request.post('/user/add', form.value);\n            if (response.code === '200') {\n              addDialogVisible.value = false;\n              fetchData();\n              console.log('User added successfully');\n            } else {\n              console.error(response.msg);\n            }\n          } catch (error) {\n            console.error('Error adding user:', error);\n          }\n        }\n      });\n    };\n\n    // Other methods for fetching, searching, and deleting\n    // ...\n\n    onMounted(() => {\n      fetchData();\n    });\n    const __returned__ = {\n      name,\n      currentPage,\n      pageSize,\n      total,\n      data,\n      visible,\n      addDialogVisible,\n      form,\n      userToken,\n      openAddDialog,\n      handleAvatarSuccess,\n      saveUser,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","request","name","currentPage","pageSize","total","data","arr","visible","addDialogVisible","form","username","password","phone","email","address","avatar","userToken","JSON","parse","localStorage","getItem","openAddDialog","value","handleAvatarSuccess","response","saveUser","formRef","validate","valid","post","code","fetchData","console","log","error","msg"],"sources":["D:/大学资料/软件工程/项目/test/demo/vue/src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <!-- Search Area -->\r\n  <div style=\"margin: 10px 10px\">\r\n    <el-input v-model=\"name\" style=\"width: 20%\" placeholder=\"输入姓名\"></el-input>\r\n    <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"handleSearch\">搜索</el-button>\r\n    <el-button type=\"primary\" plain @click=\"openAddDialog\">新增用户</el-button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div style=\"padding: 10px;\">\r\n    <el-table :data=\"data.arr\" border stripe>\r\n      <el-table-column type=\"selection\" />\r\n      <el-table-column prop=\"id\" label=\"编号\" width=\"55\" />\r\n      <el-table-column prop=\"name\" label=\"姓名\" />\r\n      <el-table-column prop=\"phone\" label=\"手机号码\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column label=\"\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-button @click=\"handleEdit(scope.row)\" size=\"small\" type=\"primary\">编辑</el-button>\r\n\r\n          <el-popover :visible=\"visible\" placement=\"top\" :width=\"160\">\r\n            <p>Are you sure to delete this?</p>\r\n            <div style=\"text-align: right; margin: 0\">\r\n              <el-button size=\"small\" text @click=\"visible = false\">cancel</el-button>\r\n              <el-button size=\"small\" type=\"primary\" @click=\"handleDelete(scope.row)\">confirm</el-button>\r\n            </div>\r\n            <template #reference>\r\n              <el-button @click=\"visible = true\" size=\"small\" type=\"danger\">删除</el-button>\r\n            </template>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n\r\n  <!-- Pagination -->\r\n  <div class=\"example-pagination-block\">\r\n    <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"total\"\r\n        layout=\"prev, pager, next, sizes\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n\r\n  <!-- Add User Dialog -->\r\n  <el-dialog title=\"新增用户\" :visible.sync=\"addDialogVisible\" width=\"30%\">\r\n    <el-form :model=\"form\" ref=\"formRef\" label-width=\"80px\">\r\n      <el-form-item label=\"用户名\" prop=\"username\" :rules=\"[{ required: true, message: '请输入用户名', trigger: 'blur' }]\">\r\n        <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\" :rules=\"[{ required: true, message: '请输入密码', trigger: 'blur' }]\">\r\n        <el-input type=\"password\" v-model=\"form.password\" placeholder=\"密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"姓名\" prop=\"name\">\r\n        <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"phone\">\r\n        <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"地址\" prop=\"address\">\r\n        <el-input type=\"textarea\" v-model=\"form.address\" placeholder=\"地址\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"addDialogVisible = false\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"saveUser\">确定</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\n\r\nconst name = ref('');\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(10);\r\nconst total = ref(50);\r\nconst data = ref({ arr: [] });\r\nconst visible = ref(false);\r\nconst addDialogVisible = ref(false);\r\n\r\nconst form = ref({\r\n  username: '',\r\n  password: '',\r\n  name: '',\r\n  phone: '',\r\n  email: '',\r\n  address: '',\r\n  avatar: ''\r\n});\r\n\r\nconst userToken = ref(JSON.parse(localStorage.getItem('user-token')) || '');\r\n\r\nconst openAddDialog = () => {\r\n  form.value = {}; // Reset form\r\n  addDialogVisible.value = true;\r\n};\r\n\r\nconst handleAvatarSuccess = (response) => {\r\n  form.value.avatar = response.data;\r\n};\r\n\r\nconst saveUser = async () => {\r\n  const formRef = ref();\r\n  formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const response = await request.post('/user/add', form.value);\r\n        if (response.code === '200') {\r\n          addDialogVisible.value = false;\r\n          fetchData();\r\n          console.log('User added successfully');\r\n        } else {\r\n          console.error(response.msg);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding user:', error);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n// Other methods for fetching, searching, and deleting\r\n// ...\r\n\r\nonMounted(() => {\r\n  fetchData();\r\n});\r\n</script>\r\n"],"mappings":"AA+EA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,OAAO,MAAM,iBAAiB;;;;;;;IAErC,MAAMC,IAAI,GAAGH,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMI,WAAW,GAAGJ,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,KAAK,GAAGN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,IAAI,GAAGP,GAAG,CAAC;MAAEQ,GAAG,EAAE;IAAG,CAAC,CAAC;IAC7B,MAAMC,OAAO,GAAGT,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMU,gBAAgB,GAAGV,GAAG,CAAC,KAAK,CAAC;IAEnC,MAAMW,IAAI,GAAGX,GAAG,CAAC;MACfY,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZV,IAAI,EAAE,EAAE;MACRW,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGlB,GAAG,CAACmB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;IAE3E,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BZ,IAAI,CAACa,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MACjBd,gBAAgB,CAACc,KAAK,GAAG,IAAI;IAC/B,CAAC;IAED,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;MACxCf,IAAI,CAACa,KAAK,CAACP,MAAM,GAAGS,QAAQ,CAACnB,IAAI;IACnC,CAAC;IAED,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,OAAO,GAAG5B,GAAG,CAAC,CAAC;MACrB4B,OAAO,CAACJ,KAAK,CAACK,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACtC,IAAIA,KAAK,EAAE;UACT,IAAI;YACF,MAAMJ,QAAQ,GAAG,MAAMxB,OAAO,CAAC6B,IAAI,CAAC,WAAW,EAAEpB,IAAI,CAACa,KAAK,CAAC;YAC5D,IAAIE,QAAQ,CAACM,IAAI,KAAK,KAAK,EAAE;cAC3BtB,gBAAgB,CAACc,KAAK,GAAG,KAAK;cAC9BS,SAAS,CAAC,CAAC;cACXC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;YACxC,CAAC,MAAM;cACLD,OAAO,CAACE,KAAK,CAACV,QAAQ,CAACW,GAAG,CAAC;YAC7B;UACF,CAAC,CAAC,OAAOD,KAAK,EAAE;YACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC5C;QACF;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACA;;IAEAnC,SAAS,CAAC,MAAM;MACdgC,SAAS,CAAC,CAAC;IACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}