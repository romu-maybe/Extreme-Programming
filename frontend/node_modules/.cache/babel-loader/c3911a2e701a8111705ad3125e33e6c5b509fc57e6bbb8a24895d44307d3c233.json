{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport request from \"@/utils/request\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref(\"\");\n    const name = ref(\"\");\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const data = ref({\n      arr: []\n    });\n    const visible = ref(false);\n    const handleSizeChange = newSize => {\n      pageSize.value = newSize;\n      load();\n    };\n    const handleCurrentChange = newPage => {\n      currentPage.value = newPage;\n      load();\n    };\n    const handleEdit = row => {\n      console.log('Editing row:', row);\n    };\n    const handleDelete = row => {\n      console.log('Deleting row:', row);\n      visible.value = true; // 应该在这里发起删除请求\n    };\n    onMounted(() => {\n      load();\n    });\n    const load = async () => {\n      try {\n        const usernameRef = ref(''); // 假设这是从表单输入中获取的\n        const nameRef = ref(''); // 假设这是从表单输入中获取的\n\n        // 注意：以下代码不是标准的 URL 编码实践\n        const params = new URLSearchParams({\n          username: `\"${usernameRef.value}\"`,\n          // 在参数值周围添加双引号\n          name: `\"${nameRef.value}\"`,\n          // 在参数值周围添加双引号\n          pageNum: currentPage.value,\n          pageSize: pageSize.value\n        });\n        const response = await axios.get('/user/selectByPage', {\n          params\n        });\n        data.value.arr = response.data.records; // 假设这是你想要的数据数组\n        total.value = response.data.total; // 假设这是数据总数\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const __returned__ = {\n      username,\n      name,\n      currentPage,\n      pageSize,\n      total,\n      data,\n      visible,\n      handleSizeChange,\n      handleCurrentChange,\n      handleEdit,\n      handleDelete,\n      load,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get request() {\n        return request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","request","username","name","currentPage","pageSize","total","data","arr","visible","handleSizeChange","newSize","value","load","handleCurrentChange","newPage","handleEdit","row","console","log","handleDelete","usernameRef","nameRef","params","URLSearchParams","pageNum","response","get","records","error"],"sources":["D:/大学资料/软件工程/项目/test/demo/vue/src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <!--搜索区域-->\r\n  <div style=\"margin: 10px 10px\">\r\n    <el-input v-model=\"name\" style=\"width: 20%\" placeholder=\"输入姓名\"></el-input>\r\n    <el-button type=\"primary\" style=\"margin-left: 5px\">搜索</el-button>\r\n  </div>\r\n  <!--主体区域-->\r\n  <div style=\"padding: 10px;\">\r\n    <el-table :data=\"data.arr\" border stripe>\r\n      <el-table-column type=\"selection\" />\r\n      <el-table-column prop=\"id\" label=\"编号\" width=\"55\" />\r\n      <el-table-column prop=\"name\" label=\"姓名\" />\r\n      <el-table-column prop=\"phone\" label=\"手机号码\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column label=\"\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-button @click= \"handleEdit(scope.row)\" size=\"small\" type=\"primary\">编辑</el-button>\r\n\r\n           <el-popover :visible=\"visible\" placement=\"top\" :width=\"160\">\r\n              <p>Are you sure to delete this?</p>\r\n              <div style=\"text-align: right; margin: 0\">\r\n                <el-button size=\"small\" text @click=\"visible = false\">cancel</el-button>\r\n                <el-button size=\"small\" type=\"primary\" @click=\"visible = false\">\r\n                  confirm\r\n                </el-button>\r\n              </div>\r\n              <template #reference>\r\n                <el-button @click=\"handleDelete(scope.row)\" size=\"small\" type=\"danger\">删除</el-button>\r\n              </template>\r\n            </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n  <div class=\"example-pagination-block\">\r\n    <div class=\"example-demonstration\"></div>\r\n    <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"total\"\r\n        layout=\"prev, pager, next, sizes\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport request from \"@/utils/request\";\r\n\r\nconst username = ref(\"\");\r\nconst name = ref(\"\");\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(10);\r\nconst total = ref(0);\r\nconst data = ref({ arr: [] });\r\nconst visible = ref(false);\r\n\r\nconst handleSizeChange = (newSize) => {\r\n  pageSize.value = newSize;\r\n  load();\r\n};\r\n\r\nconst handleCurrentChange = (newPage) => {\r\n  currentPage.value = newPage;\r\n  load();\r\n};\r\n\r\nconst handleEdit = (row) => {\r\n  console.log('Editing row:', row);\r\n};\r\n\r\nconst handleDelete = (row) => {\r\n  console.log('Deleting row:', row);\r\n  visible.value = true; // 应该在这里发起删除请求\r\n};\r\n\r\nonMounted(() => {\r\n  load();\r\n});\r\n\r\nconst load = async () => {\r\n  try {\r\n    const usernameRef = ref(''); // 假设这是从表单输入中获取的\r\n    const nameRef = ref('');      // 假设这是从表单输入中获取的\r\n\r\n    // 注意：以下代码不是标准的 URL 编码实践\r\n    const params = new URLSearchParams({\r\n      username: `\"${usernameRef.value}\"`, // 在参数值周围添加双引号\r\n      name: `\"${nameRef.value}\"`,         // 在参数值周围添加双引号\r\n      pageNum: currentPage.value,\r\n      pageSize: pageSize.value\r\n    });\r\n\r\n    const response = await axios.get('/user/selectByPage', { params });\r\n    data.value.arr = response.data.records; // 假设这是你想要的数据数组\r\n    total.value = response.data.total;      // 假设这是数据总数\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n"],"mappings":";;;AAgDA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iBAAiB;;;;;;;IAErC,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,IAAI,GAAGL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,WAAW,GAAGN,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMO,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,KAAK,GAAGR,GAAG,CAAC,CAAC,CAAC;IACpB,MAAMS,IAAI,GAAGT,GAAG,CAAC;MAAEU,GAAG,EAAE;IAAG,CAAC,CAAC;IAC7B,MAAMC,OAAO,GAAGX,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMY,gBAAgB,GAAIC,OAAO,IAAK;MACpCN,QAAQ,CAACO,KAAK,GAAGD,OAAO;MACxBE,IAAI,CAAC,CAAC;IACR,CAAC;IAED,MAAMC,mBAAmB,GAAIC,OAAO,IAAK;MACvCX,WAAW,CAACQ,KAAK,GAAGG,OAAO;MAC3BF,IAAI,CAAC,CAAC;IACR,CAAC;IAED,MAAMG,UAAU,GAAIC,GAAG,IAAK;MAC1BC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;IAClC,CAAC;IAED,MAAMG,YAAY,GAAIH,GAAG,IAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAAC;MACjCR,OAAO,CAACG,KAAK,GAAG,IAAI,CAAC,CAAC;IACxB,CAAC;IAEDb,SAAS,CAAC,MAAM;MACdc,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;IAEF,MAAMA,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAMQ,WAAW,GAAGvB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,MAAMwB,OAAO,GAAGxB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAM;;QAE9B;QACA,MAAMyB,MAAM,GAAG,IAAIC,eAAe,CAAC;UACjCtB,QAAQ,EAAE,IAAImB,WAAW,CAACT,KAAK,GAAG;UAAE;UACpCT,IAAI,EAAE,IAAImB,OAAO,CAACV,KAAK,GAAG;UAAU;UACpCa,OAAO,EAAErB,WAAW,CAACQ,KAAK;UAC1BP,QAAQ,EAAEA,QAAQ,CAACO;QACrB,CAAC,CAAC;QAEF,MAAMc,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,oBAAoB,EAAE;UAAEJ;QAAO,CAAC,CAAC;QAClEhB,IAAI,CAACK,KAAK,CAACJ,GAAG,GAAGkB,QAAQ,CAACnB,IAAI,CAACqB,OAAO,CAAC,CAAC;QACxCtB,KAAK,CAACM,KAAK,GAAGc,QAAQ,CAACnB,IAAI,CAACD,KAAK,CAAC,CAAM;MAC1C,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}